{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_files\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilterYear] = useState(\"2019\");\n  const filterChangeHandler = selectedYear => {\n    setFilterYear(selectedYear);\n  };\n  const filteredArray = props.items.filter(data => {\n    /*Array being filtered on the basis of the entered year */\n    if (data.date.getFullYear().toString() == filteredYear) {\n      return data;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onFilterChange: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        items: filteredArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"dmRfkazhEGfQ5sNRWaHYHoTADnY=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpensesList","ExpensesFilter","ExpensesChart","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilterYear","filterChangeHandler","selectedYear","filteredArray","items","filter","data","date","getFullYear","toString","children","className","selected","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","expenses","_c","$RefreshReg$"],"sources":["D:/React_files/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\"\r\n\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filteredYear, setFilterYear] = useState(\"2019\");\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilterYear(selectedYear);\r\n    }\r\n\r\n    const filteredArray = props.items.filter((data) => {         /*Array being filtered on the basis of the entered year */\r\n        if (data.date.getFullYear().toString() == filteredYear) {\r\n            return data;\r\n        }\r\n    });\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"expenses\" >\r\n                <ExpensesFilter selected={filteredYear} onFilterChange={filterChangeHandler} />\r\n\r\n                {/* {filteredArray.length === 0 ? (\r\n                    <p>No Expenses this year</p>\r\n                ) : (\r\n                    <div>\r\n                        {filteredArray.map((expense) => {\r\n                            return (\r\n                                <ExpenseItem\r\n                                    key={expense.id}\r\n                                    title={expense.title}\r\n                                    amount={expense.amount}\r\n                                    date={expense.date}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )} */}\r\n                <ExpensesChart expenses = {filteredArray} /> \r\n                <ExpensesList items={filteredArray} />\r\n\r\n                {/* <ExpenseItem title={props.items[0].title} amount={props.items[0].amount} date={props.items[0].date} />\r\n                <ExpenseItem title={props.items[1].title} amount={props.items[1].amount} date={props.items[1].date} />\r\n                <ExpenseItem title={props.items[2].title} amount={props.items[2].amount} date={props.items[2].date} />\r\n                <ExpenseItem title={props.items[3].title} amount={props.items[3].amount} date={props.items[3].date} /> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAEtD,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC1CF,aAAa,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,aAAa,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;IAAU;IACzD,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,IAAIV,YAAY,EAAE;MACpD,OAAOO,IAAI;IACf;EACJ,CAAC,CAAC;EAIF,oBACIX,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACrBf,OAAA,CAACH,cAAc;QAACoB,QAAQ,EAAEb,YAAa;QAACc,cAAc,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAkB/EtB,OAAA,CAACF,aAAa;QAACyB,QAAQ,EAAIf;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CtB,OAAA,CAACJ,YAAY;QAACa,KAAK,EAAED;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnB,EAAA,CA/CQF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}